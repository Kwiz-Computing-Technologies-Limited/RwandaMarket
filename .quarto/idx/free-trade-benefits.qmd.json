{"title":"Free Trade Benefit Forms","markdown":{"yaml":{"title":"","format":{"html":{"code-fold":true,"code-summary":"Show the code","resources":["shinylive-sw.js"]}},"engine":"knitr","filters":["webr","shinylive"]},"headingText":"Free Trade Benefit Forms","containsRefs":false,"markdown":"\n\nTo fully leverage the benefits of free trade agreements, particularly within the East African Community (EAC), RwandaMarket will implement a comprehensive system for tracking, documenting, and analyzing our use of these benefits.\n\n\n### 1. Product Origin Declaration Form\n\n```{shinylive-r}\n#| standalone: TRUE\nlibrary(shiny)\n\nfluidPage(\n  (\n    textInput(\"product_name\", \"Product Name\"),\n    textInput(\"hs_code\", \"HS Code\"),\n    selectInput(\"country_of_origin\", \"Country of Origin\", \n                choices = c(\"Rwanda\", \"Kenya\", \"Uganda\", \"Tanzania\", \"Burundi\", \"South Sudan\")),\n    numericInput(\"local_content_percentage\", \"Percentage of Local Content\", value = 0, min = 0, max = 100),\n    textAreaInput(\"manufacturing_process\", \"Brief Description of Manufacturing Process\"),\n    checkboxInput(\"meets_origin_criteria\", \"Meets EAC Rules of Origin Criteria\"),\n    fileInput(\"supporting_documents\", \"Upload Supporting Documents\", multiple = TRUE)\n))\n```\n\n### 2. Tariff Savings Tracking Form\n\n```{shinylive-r}\n#| standalone: TRUE\n\nfluidPage(\n(\n  textInput(\"product_name\", \"Product Name\"),\n  textInput(\"hs_code\", \"HS Code\"),\n  selectInput(\"origin_country\", \"Origin Country\", \n              choices = c(\"Rwanda\", \"Kenya\", \"Uganda\", \"Tanzania\", \"Burundi\", \"South Sudan\")),\n  selectInput(\"destination_country\", \"Destination Country\", \n              choices = c(\"Rwanda\", \"Kenya\", \"Uganda\", \"Tanzania\", \"Burundi\", \"South Sudan\")),\n  numericInput(\"shipment_value\", \"Shipment Value (USD)\", value = 0),\n  numericInput(\"standard_tariff_rate\", \"Standard Tariff Rate (%)\", value = 0),\n  numericInput(\"preferential_tariff_rate\", \"Preferential Tariff Rate under EAC (%)\", value = 0),\n  textInput(\"certificate_of_origin_number\", \"Certificate of Origin Number\")\n))\n```\n\n### 3. Non-Tariff Barrier Reporting Form\n\n```{shinylive-r}\n#| standalone: TRUE\n\nfluidPage(\n  (\n    selectInput(\"barrier_type\", \"Type of Non-Tariff Barrier\", \n              choices = c(\"Customs Procedures\", \"Technical Regulations\", \"Sanitary Measures\", \"Licensing Requirements\", \"Other\")),\n    selectInput(\"country\", \"Country Where Barrier was Encountered\", \n              choices = c(\"Rwanda\", \"Kenya\", \"Uganda\", \"Tanzania\", \"Burundi\", \"South Sudan\")),\n    dateInput(\"date_encountered\", \"Date Encountered\"),\n    textAreaInput(\"barrier_description\", \"Detailed Description of the Barrier\"),\n    numericInput(\"estimated_cost\", \"Estimated Cost Impact (USD)\", value = 0),\n    textAreaInput(\"resolution_efforts\", \"Description of Resolution Efforts\"),\n    selectInput(\"status\", \"Current Status\", \n                choices = c(\"Unresolved\", \"In Progress\", \"Resolved\"))\n))\n\n```\n\nNow, let's update our MongoDB setup script to include collections for these new forms:\n\n```{r}\n#| eval: false\n#| echo: false\nlibrary(paws)\nlibrary(mongolite)\n\n# AWS and MongoDB connection setup (as before)\n# ...\n\n# Create additional collections for free trade benefit data\nproduct_origin <- mongo(collection = \"product_origin\", db = \"rwandamarket\", url = connection_string)\ntariff_savings <- mongo(collection = \"tariff_savings\", db = \"rwandamarket\", url = connection_string)\nnon_tariff_barriers <- mongo(collection = \"non_tariff_barriers\", db = \"rwandamarket\", url = connection_string)\n\n# Example: Insert a product origin record\nproduct_origin$insert(\n  data.frame(\n    product_name = \"Rwandan Mountain Coffee\",\n    hs_code = \"0901.21\",\n    country_of_origin = \"Rwanda\",\n    local_content_percentage = 95,\n    manufacturing_process = \"Locally grown, processed, and packaged in Rwanda\",\n    meets_origin_criteria = TRUE,\n    date_submitted = Sys.Date()\n  )\n)\n\n# Example: Insert a tariff savings record\ntariff_savings$insert(\n  data.frame(\n    product_name = \"Rwandan Mountain Coffee\",\n    hs_code = \"0901.21\",\n    origin_country = \"Rwanda\",\n    destination_country = \"Kenya\",\n    shipment_value = 10000,\n    standard_tariff_rate = 25,\n    preferential_tariff_rate = 0,\n    certificate_of_origin_number = \"EAC-RW-2023-12345\",\n    date_of_shipment = Sys.Date()\n  )\n)\n\n# Remember to close all connections when done\n# ...\n```\n\nNow, let's create an R script to analyze the free trade benefits data:\n\n```{r}\n#| eval: false\n#| echo: false\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Assume we've loaded the data into dataframes: product_origin_data, tariff_savings_data, non_tariff_barrier_data\n\n# Analyze tariff savings\ntotal_savings <- tariff_savings_data %>%\n  mutate(savings = shipment_value * (standard_tariff_rate - preferential_tariff_rate) / 100) %>%\n  summarise(total_savings = sum(savings))\n\nsavings_by_product <- tariff_savings_data %>%\n  mutate(savings = shipment_value * (standard_tariff_rate - preferential_tariff_rate) / 100) %>%\n  group_by(product_name) %>%\n  summarise(total_savings = sum(savings)) %>%\n  arrange(desc(total_savings))\n\n# Visualize tariff savings by product\nggplot(savings_by_product, aes(x = reorder(product_name, total_savings), y = total_savings)) +\n  geom_bar(stat = \"identity\", fill = \"#00A86B\") +\n  coord_flip() +\n  labs(title = \"Tariff Savings by Product\", x = \"Product\", y = \"Total Savings (USD)\") +\n  theme_minimal()\n\n# Analyze non-tariff barriers\nbarriers_by_type <- non_tariff_barrier_data %>%\n  group_by(barrier_type) %>%\n  summarise(count = n(), total_cost_impact = sum(estimated_cost))\n\n# Visualize non-tariff barriers\nggplot(barriers_by_type, aes(x = barrier_type, y = count, fill = total_cost_impact)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_gradient(low = \"yellow\", high = \"red\") +\n  labs(title = \"Non-Tariff Barriers by Type\", x = \"Barrier Type\", y = \"Count\", fill = \"Total Cost Impact (USD)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Analyze product origin compliance\norigin_compliance <- product_origin_data %>%\n  group_by(country_of_origin) %>%\n  summarise(total_products = n(),\n            compliant_products = sum(meets_origin_criteria),\n            compliance_rate = compliant_products / total_products * 100)\n\n# Print insights\ncat(\"Total tariff savings:\", sprintf(\"$%s\", format(total_savings$total_savings, big.mark = \",\")), \"\\n\")\ncat(\"Top 3 products by tariff savings:\\n\")\nprint(head(savings_by_product, 3))\ncat(\"\\nNon-tariff barriers summary:\\n\")\nprint(barriers_by_type)\ncat(\"\\nProduct origin compliance rates:\\n\")\nprint(origin_compliance)\n\n# Recommendations based on analysis\ncat(\"\\nRecommendations:\\n\")\nif (any(origin_compliance$compliance_rate < 95)) {\n  cat(\"- Improve origin compliance for products from:\", \n      origin_compliance$country_of_origin[origin_compliance$compliance_rate < 95], \"\\n\")\n}\nif (nrow(barriers_by_type) > 0) {\n  most_costly_barrier <- barriers_by_type %>% arrange(desc(total_cost_impact)) %>% slice(1)\n  cat(\"- Focus on resolving\", most_costly_barrier$barrier_type, \n      \"barriers, which have the highest cost impact.\\n\")\n}\ntop_saving_product <- savings_by_product$product_name[1]\ncat(\"- Explore opportunities to increase trade of\", top_saving_product, \n    \"which provides the highest tariff savings.\\n\")\n```\n\nThis system for documenting and analyzing free trade benefits will allow RwandaMarket to:\n\n1.  Ensure compliance with Rules of Origin requirements for preferential tariff treatment.\n2.  Track and quantify the financial benefits of utilizing free trade agreements.\n3.  Identify and address non-tariff barriers that may be hindering trade.\n4.  Optimize product sourcing and trade routes based on potential tariff savings.\n5.  Provide data-driven insights for business strategy and government advocacy efforts.\n\nTo fully implement this system:\n\n1.  Integrate these forms into the RwandaMarket website or internal systems.\n2.  Set up automated data collection where possible (e.g., integrating with customs databases).\n3.  Develop a dashboard to visualize key metrics related to free trade benefits.\n4.  Implement regular reporting and analysis cycles to inform business decisions.\n5.  Establish a process for acting on insights, such as addressing compliance issues or lobbying for resolution of persistent non-tariff barriers.\n\nThis comprehensive approach to tracking and analyzing free trade benefits will enable RwandaMarket to maximize the advantages of trade agreements, reduce costs, and streamline cross-border operations.\n","srcMarkdownNoYaml":"\n\nTo fully leverage the benefits of free trade agreements, particularly within the East African Community (EAC), RwandaMarket will implement a comprehensive system for tracking, documenting, and analyzing our use of these benefits.\n\n## Free Trade Benefit Forms\n\n### 1. Product Origin Declaration Form\n\n```{shinylive-r}\n#| standalone: TRUE\nlibrary(shiny)\n\nfluidPage(\n  (\n    textInput(\"product_name\", \"Product Name\"),\n    textInput(\"hs_code\", \"HS Code\"),\n    selectInput(\"country_of_origin\", \"Country of Origin\", \n                choices = c(\"Rwanda\", \"Kenya\", \"Uganda\", \"Tanzania\", \"Burundi\", \"South Sudan\")),\n    numericInput(\"local_content_percentage\", \"Percentage of Local Content\", value = 0, min = 0, max = 100),\n    textAreaInput(\"manufacturing_process\", \"Brief Description of Manufacturing Process\"),\n    checkboxInput(\"meets_origin_criteria\", \"Meets EAC Rules of Origin Criteria\"),\n    fileInput(\"supporting_documents\", \"Upload Supporting Documents\", multiple = TRUE)\n))\n```\n\n### 2. Tariff Savings Tracking Form\n\n```{shinylive-r}\n#| standalone: TRUE\n\nfluidPage(\n(\n  textInput(\"product_name\", \"Product Name\"),\n  textInput(\"hs_code\", \"HS Code\"),\n  selectInput(\"origin_country\", \"Origin Country\", \n              choices = c(\"Rwanda\", \"Kenya\", \"Uganda\", \"Tanzania\", \"Burundi\", \"South Sudan\")),\n  selectInput(\"destination_country\", \"Destination Country\", \n              choices = c(\"Rwanda\", \"Kenya\", \"Uganda\", \"Tanzania\", \"Burundi\", \"South Sudan\")),\n  numericInput(\"shipment_value\", \"Shipment Value (USD)\", value = 0),\n  numericInput(\"standard_tariff_rate\", \"Standard Tariff Rate (%)\", value = 0),\n  numericInput(\"preferential_tariff_rate\", \"Preferential Tariff Rate under EAC (%)\", value = 0),\n  textInput(\"certificate_of_origin_number\", \"Certificate of Origin Number\")\n))\n```\n\n### 3. Non-Tariff Barrier Reporting Form\n\n```{shinylive-r}\n#| standalone: TRUE\n\nfluidPage(\n  (\n    selectInput(\"barrier_type\", \"Type of Non-Tariff Barrier\", \n              choices = c(\"Customs Procedures\", \"Technical Regulations\", \"Sanitary Measures\", \"Licensing Requirements\", \"Other\")),\n    selectInput(\"country\", \"Country Where Barrier was Encountered\", \n              choices = c(\"Rwanda\", \"Kenya\", \"Uganda\", \"Tanzania\", \"Burundi\", \"South Sudan\")),\n    dateInput(\"date_encountered\", \"Date Encountered\"),\n    textAreaInput(\"barrier_description\", \"Detailed Description of the Barrier\"),\n    numericInput(\"estimated_cost\", \"Estimated Cost Impact (USD)\", value = 0),\n    textAreaInput(\"resolution_efforts\", \"Description of Resolution Efforts\"),\n    selectInput(\"status\", \"Current Status\", \n                choices = c(\"Unresolved\", \"In Progress\", \"Resolved\"))\n))\n\n```\n\nNow, let's update our MongoDB setup script to include collections for these new forms:\n\n```{r}\n#| eval: false\n#| echo: false\nlibrary(paws)\nlibrary(mongolite)\n\n# AWS and MongoDB connection setup (as before)\n# ...\n\n# Create additional collections for free trade benefit data\nproduct_origin <- mongo(collection = \"product_origin\", db = \"rwandamarket\", url = connection_string)\ntariff_savings <- mongo(collection = \"tariff_savings\", db = \"rwandamarket\", url = connection_string)\nnon_tariff_barriers <- mongo(collection = \"non_tariff_barriers\", db = \"rwandamarket\", url = connection_string)\n\n# Example: Insert a product origin record\nproduct_origin$insert(\n  data.frame(\n    product_name = \"Rwandan Mountain Coffee\",\n    hs_code = \"0901.21\",\n    country_of_origin = \"Rwanda\",\n    local_content_percentage = 95,\n    manufacturing_process = \"Locally grown, processed, and packaged in Rwanda\",\n    meets_origin_criteria = TRUE,\n    date_submitted = Sys.Date()\n  )\n)\n\n# Example: Insert a tariff savings record\ntariff_savings$insert(\n  data.frame(\n    product_name = \"Rwandan Mountain Coffee\",\n    hs_code = \"0901.21\",\n    origin_country = \"Rwanda\",\n    destination_country = \"Kenya\",\n    shipment_value = 10000,\n    standard_tariff_rate = 25,\n    preferential_tariff_rate = 0,\n    certificate_of_origin_number = \"EAC-RW-2023-12345\",\n    date_of_shipment = Sys.Date()\n  )\n)\n\n# Remember to close all connections when done\n# ...\n```\n\nNow, let's create an R script to analyze the free trade benefits data:\n\n```{r}\n#| eval: false\n#| echo: false\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Assume we've loaded the data into dataframes: product_origin_data, tariff_savings_data, non_tariff_barrier_data\n\n# Analyze tariff savings\ntotal_savings <- tariff_savings_data %>%\n  mutate(savings = shipment_value * (standard_tariff_rate - preferential_tariff_rate) / 100) %>%\n  summarise(total_savings = sum(savings))\n\nsavings_by_product <- tariff_savings_data %>%\n  mutate(savings = shipment_value * (standard_tariff_rate - preferential_tariff_rate) / 100) %>%\n  group_by(product_name) %>%\n  summarise(total_savings = sum(savings)) %>%\n  arrange(desc(total_savings))\n\n# Visualize tariff savings by product\nggplot(savings_by_product, aes(x = reorder(product_name, total_savings), y = total_savings)) +\n  geom_bar(stat = \"identity\", fill = \"#00A86B\") +\n  coord_flip() +\n  labs(title = \"Tariff Savings by Product\", x = \"Product\", y = \"Total Savings (USD)\") +\n  theme_minimal()\n\n# Analyze non-tariff barriers\nbarriers_by_type <- non_tariff_barrier_data %>%\n  group_by(barrier_type) %>%\n  summarise(count = n(), total_cost_impact = sum(estimated_cost))\n\n# Visualize non-tariff barriers\nggplot(barriers_by_type, aes(x = barrier_type, y = count, fill = total_cost_impact)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_gradient(low = \"yellow\", high = \"red\") +\n  labs(title = \"Non-Tariff Barriers by Type\", x = \"Barrier Type\", y = \"Count\", fill = \"Total Cost Impact (USD)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Analyze product origin compliance\norigin_compliance <- product_origin_data %>%\n  group_by(country_of_origin) %>%\n  summarise(total_products = n(),\n            compliant_products = sum(meets_origin_criteria),\n            compliance_rate = compliant_products / total_products * 100)\n\n# Print insights\ncat(\"Total tariff savings:\", sprintf(\"$%s\", format(total_savings$total_savings, big.mark = \",\")), \"\\n\")\ncat(\"Top 3 products by tariff savings:\\n\")\nprint(head(savings_by_product, 3))\ncat(\"\\nNon-tariff barriers summary:\\n\")\nprint(barriers_by_type)\ncat(\"\\nProduct origin compliance rates:\\n\")\nprint(origin_compliance)\n\n# Recommendations based on analysis\ncat(\"\\nRecommendations:\\n\")\nif (any(origin_compliance$compliance_rate < 95)) {\n  cat(\"- Improve origin compliance for products from:\", \n      origin_compliance$country_of_origin[origin_compliance$compliance_rate < 95], \"\\n\")\n}\nif (nrow(barriers_by_type) > 0) {\n  most_costly_barrier <- barriers_by_type %>% arrange(desc(total_cost_impact)) %>% slice(1)\n  cat(\"- Focus on resolving\", most_costly_barrier$barrier_type, \n      \"barriers, which have the highest cost impact.\\n\")\n}\ntop_saving_product <- savings_by_product$product_name[1]\ncat(\"- Explore opportunities to increase trade of\", top_saving_product, \n    \"which provides the highest tariff savings.\\n\")\n```\n\nThis system for documenting and analyzing free trade benefits will allow RwandaMarket to:\n\n1.  Ensure compliance with Rules of Origin requirements for preferential tariff treatment.\n2.  Track and quantify the financial benefits of utilizing free trade agreements.\n3.  Identify and address non-tariff barriers that may be hindering trade.\n4.  Optimize product sourcing and trade routes based on potential tariff savings.\n5.  Provide data-driven insights for business strategy and government advocacy efforts.\n\nTo fully implement this system:\n\n1.  Integrate these forms into the RwandaMarket website or internal systems.\n2.  Set up automated data collection where possible (e.g., integrating with customs databases).\n3.  Develop a dashboard to visualize key metrics related to free trade benefits.\n4.  Implement regular reporting and analysis cycles to inform business decisions.\n5.  Establish a process for acting on insights, such as addressing compliance issues or lobbying for resolution of persistent non-tariff barriers.\n\nThis comprehensive approach to tracking and analyzing free trade benefits will enable RwandaMarket to maximize the advantages of trade agreements, reduce costs, and streamline cross-border operations.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"include-in-header":{"text":"<style>\n.toc-title {\n  color: #FFF !important;\n}\n</style>\n"},"filters":["webr","shinylive"],"output-file":"free-trade-benefits.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","page-layout":"full","theme":"cosmo","title":"","code-summary":"Show the code","resources":["shinylive-sw.js"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}