{
  "hash": "bf813d108a8beeda8ff6866219305368",
  "result": {
    "markdown": "---\ntitle: \"Documentation Requirements\"\n---\n\n\nTo facilitate our business operations, we require the following documentation from our partners, suppliers, and customers:\n\n## B2C Documentation\n\n1. Customer Registration Form\n   - Full Name\n   - Email Address\n   - Phone Number\n   - Shipping Address\n   - Preferred Payment Method\n\n2. Product Review Form\n   - Product Name\n   - Rating (1-5 stars)\n   - Written Review\n   - Images (optional)\n\n## B2B Documentation\n\n1. Business Partner Registration Form\n   - Company Name\n   - Business Registration Number\n   - Contact Person Name\n   - Contact Email\n   - Contact Phone\n   - Business Address\n   - Type of Partnership (Supplier, Distributor, etc.)\n\n2. Supplier Information Form\n   - Company Name\n   - Product Categories Supplied\n   - Production Capacity\n   - Quality Certifications\n   - Bank Account Details for Payments\n\n3. Export Documentation Form\n   - Product Details\n   - Country of Origin\n   - HS Code\n   - Certificate of Origin\n   - Phytosanitary Certificate (for agricultural products)\n   - Value of Goods\n\n4. Import Documentation Form\n   - Importer Details\n   - Product Details\n   - Customs Declaration\n   - Import Permit Number\n   - Bill of Lading / Airway Bill Number\n\n5. Trade Facilitation Service Request Form\n   - Service Type (Customs Clearance, Logistics, etc.)\n   - Shipment Details\n   - Required Documentation Checklist\n\nNow, let's create the forms to collect this information. We'll use the `shiny` library to create interactive forms that can be embedded in our Quarto website.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'shiny' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container-fluid\">\n<h2>Customer Registration Form</h2>\n<div class=\"container-fluid\">\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"full_name-label\" for=\"full_name\">Full Name</label>\n<input id=\"full_name\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"email-label\" for=\"email\">Email Address</label>\n<input id=\"email\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"phone-label\" for=\"phone\">Phone Number</label>\n<input id=\"phone\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"shipping_address-label\" for=\"shipping_address\">Shipping Address</label>\n<textarea id=\"shipping_address\" class=\"shiny-input-textarea form-control\"></textarea>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"payment_method-label\" for=\"payment_method\">Preferred Payment Method</label>\n<div>\n<select id=\"payment_method\" class=\"shiny-input-select\"><option value=\"Credit Card\" selected>Credit Card</option>\n<option value=\"M-Pesa\">M-Pesa</option>\n<option value=\"Bank Transfer\">Bank Transfer</option></select>\n<script type=\"application/json\" data-for=\"payment_method\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}</script>\n</div>\n</div>\n</div>\n<hr/>\n<h2>Business Partner Registration Form</h2>\n<div class=\"container-fluid\">\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"company_name-label\" for=\"company_name\">Company Name</label>\n<input id=\"company_name\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"business_reg_num-label\" for=\"business_reg_num\">Business Registration Number</label>\n<input id=\"business_reg_num\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"contact_person-label\" for=\"contact_person\">Contact Person Name</label>\n<input id=\"contact_person\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"contact_email-label\" for=\"contact_email\">Contact Email</label>\n<input id=\"contact_email\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"contact_phone-label\" for=\"contact_phone\">Contact Phone</label>\n<input id=\"contact_phone\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"business_address-label\" for=\"business_address\">Business Address</label>\n<textarea id=\"business_address\" class=\"shiny-input-textarea form-control\"></textarea>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"partnership_type-label\" for=\"partnership_type\">Type of Partnership</label>\n<div>\n<select id=\"partnership_type\" class=\"shiny-input-select\"><option value=\"Supplier\" selected>Supplier</option>\n<option value=\"Distributor\">Distributor</option>\n<option value=\"Logistics Partner\">Logistics Partner</option>\n<option value=\"Other\">Other</option></select>\n<script type=\"application/json\" data-for=\"partnership_type\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}</script>\n</div>\n</div>\n</div>\n</div>\n```\n:::\n:::\n\n\nNow, let's set up a MongoDB database on AWS and create a script to interact with it. We'll use the `paws` library to interact with AWS and the `mongolite` library to interact with MongoDB.\n\n\n::: {.cell}\n\n:::\n\n\nThis script does the following:\n\n1. Sets up AWS credentials and initializes the DocumentDB client.\n2. Creates a DocumentDB cluster (which is MongoDB-compatible).\n3. Waits for the cluster to be available and retrieves its endpoint.\n4. Connects to the MongoDB database using the `mongolite` library.\n5. Creates collections for customers, business partners, products, and orders.\n6. Demonstrates how to insert a record and query the database.\n\nTo use this in production:\n\n1. Replace `YOUR_AWS_ACCESS_KEY_ID`, `YOUR_AWS_SECRET_ACCESS_KEY`, `YOUR_SECURE_PASSWORD`, `YOUR_SUBNET_GROUP`, and `YOUR_SECURITY_GROUP_ID` with your actual AWS and network configuration details.\n2. Ensure that your AWS security group allows incoming connections on port 27017 from your application servers.\n3. Implement proper security measures, such as storing credentials securely and not in the code.\n4. Set up error handling and connection pooling for robustness.\n5. Implement functions to handle form submissions and database operations for each type of document we're collecting.\n\nTo integrate this with the Quarto website:\n\n1. Create API endpoints (e.g., using Plumber in R) that accept form submissions and interact with the database.\n2. Modify the Shiny forms to submit to these API endpoints.\n3. Implement proper validation and error handling on both client and server sides.\n\nThis setup provides a scalable and flexible system for collecting and storing the various documents required for RwandaMarket's operations. The use of MongoDB allows for easy storage of complex, nested documents, which is particularly useful for things like product catalogs and order information.\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/jquery-3.6.0/jquery.min.js\"></script>\n<link href=\"site_libs/selectize-0.15.2/css/selectize.bootstrap3.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/selectize-0.15.2/js/selectize.min.js\"></script>\n<script src=\"site_libs/selectize-0.15.2/accessibility/js/selectize-plugin-a11y.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}